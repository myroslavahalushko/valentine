{"ast":null,"code":"var _jsxFileName = \"C:\\\\MyGovnoCod\\\\valentine\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport logo from \"./hearts/heart.svg\";\nimport './App.css';\nimport { useState, useEffect, useCallback } from \"react\";\nimport song1 from './song.m4a';\nimport song2 from './song2.mp3';\nimport useSound from 'use-sound';\nimport heart1 from './hearts/heart1.png';\nimport heart2 from './hearts/heart2.png';\nimport heart3 from './hearts/heart3.png';\nimport heart4 from './hearts/heart4.png';\nimport heart5 from './hearts/heart5.png';\nimport heart6 from './hearts/heart6.png';\nimport heart7 from './hearts/heart7.png';\nimport heart8 from './hearts/heart8.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet gameLevels = {\n  1: {\n    score: 0,\n    img: heart1\n  },\n  2: {\n    score: 50,\n    img: heart2\n  },\n  3: {\n    score: 110,\n    img: heart3\n  },\n  4: {\n    score: 180,\n    img: heart4\n  },\n  5: {\n    score: 417,\n    img: heart5\n  },\n  6: {\n    score: 500,\n    img: heart6\n  },\n  7: {\n    score: 580,\n    img: heart7\n  },\n  8: {\n    score: 666,\n    img: heart8\n  }\n};\n\nfunction getWindowDimensions() {\n  const {\n    innerWidth: width,\n    innerHeight: height\n  } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  _s();\n\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n  return windowDimensions;\n}\n\n_s(useWindowDimensions, \"XalQq70mIWrnM+6Jr3XornfayDc=\");\n\nconst Hearts = ({\n  x,\n  y,\n  level\n}) => {\n  _s2();\n\n  const [littleHearts, setLittleHearts] = useState([]);\n  const [image, setImage] = useState(gameLevels[1].img);\n\n  const createArray = () => {\n    let rand = Math.floor(Math.random() * 5 + 1);\n    let array = [];\n\n    for (let i = 0; i < rand; i++) {\n      array.push({\n        top: Math.floor(Math.random() * 12 - 12) * 10,\n        left: Math.floor(Math.random() * 12 - 12) * 10\n      });\n    }\n\n    return array;\n  };\n\n  useEffect(() => {\n    setImage(gameLevels[level].img);\n    setLittleHearts(createArray());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: littleHearts.map(h => /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image,\n      alt: \"logo\",\n      className: `littleHearts littleHeartsAnimate`,\n      style: {\n        top: y + h.top,\n        left: x + h.left\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 39\n    }, this))\n  }, void 0, false);\n};\n\n_s2(Hearts, \"92AA1pyp3VF34Cu8zcQivSnVfcY=\");\n\n_c = Hearts;\n\nfunction App() {\n  _s3();\n\n  const [heartBeat, setHeartBeat] = useState(false);\n  const {\n    height,\n    width\n  } = useWindowDimensions();\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(1);\n  const [littleHearts, setLittleHearts] = useState([]);\n  const [darkMode, setDarkMode] = useState(false);\n  const [songUrl, setSongUrl] = useState(song2);\n  const [win, setWin] = useState(false);\n  const [play, {\n    pause\n  }] = useSound(songUrl);\n\n  const onClickHeart = () => {\n    setHeartBeat(!heartBeat);\n    !heartBeat ? play() : pause();\n  };\n\n  const addHearts = useCallback(e => {\n    e.preventDefault();\n    if (e.screenX > width / 2 - 150 && e.screenX < width / 2 + 150 && e.screenY > height / 2 - 150 && e.screenY < height / 2 + 150 && e.screenX < 190 && e.screenY < 70) return;\n    setLittleHearts(prev => {\n      return [...prev, {\n        x: e.screenX,\n        y: e.screenY\n      }];\n    });\n    setScore(score => score + 1);\n\n    if (level < 8) {\n      if (score == gameLevels[level + 1].score) {\n        setLevel(level + 1);\n      }\n    }\n  }, [littleHearts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: darkMode ? \"AppDark\" : \"AppLight\",\n    onClick: addHearts,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score\",\n      onClick: () => setDarkMode(!darkMode),\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: heartBeat ? \"heartBlock heartAnimate\" : \"heartBlock\",\n      onClick: onClickHeart,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"heart\",\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this), littleHearts.map(h => /*#__PURE__*/_jsxDEV(Hearts, {\n      x: h.x,\n      y: h.y,\n      level: level\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 36\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n}\n\n_s3(App, \"senwWvG+5bdMkdfrbmpc1vG18eQ=\", false, function () {\n  return [useWindowDimensions, useSound];\n});\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Hearts\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["C:/MyGovnoCod/valentine/src/App.js"],"names":["useState","useEffect","useCallback","song1","song2","useSound","heart1","heart2","heart3","heart4","heart5","heart6","heart7","heart8","gameLevels","score","img","getWindowDimensions","innerWidth","width","innerHeight","height","window","useWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Hearts","x","y","level","littleHearts","setLittleHearts","image","setImage","createArray","rand","Math","floor","random","array","i","push","top","left","map","h","App","heartBeat","setHeartBeat","setScore","setLevel","darkMode","setDarkMode","songUrl","setSongUrl","win","setWin","play","pause","onClickHeart","addHearts","e","preventDefault","screenX","screenY","prev","logo"],"mappings":"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","sourcesContent":["import logo from './hearts/heart.svg';\nimport './App.css';\nimport {useState, useEffect, useCallback} from \"react\";\nimport song1 from './song.m4a';\nimport song2 from './song2.mp3';\nimport useSound from 'use-sound';\nimport heart1 from './hearts/heart1.png';\nimport heart2 from './hearts/heart2.png';\nimport heart3 from './hearts/heart3.png';\nimport heart4 from './hearts/heart4.png';\nimport heart5 from './hearts/heart5.png';\nimport heart6 from './hearts/heart6.png';\nimport heart7 from './hearts/heart7.png';\nimport heart8 from './hearts/heart8.png';\n\n\nlet gameLevels = {\n   1: {\n       score: 0,\n       img: heart1\n   },\n    2: {\n       score: 50,\n        img: heart2\n    },\n    3: {\n        score: 110,\n        img: heart3\n    },\n    4: {\n        score: 180,\n        img: heart4\n    },\n    5: {\n        score: 417,\n        img: heart5\n    },\n    6: {\n        score: 500,\n        img: heart6\n    },\n    7: {\n        score: 580,\n        img: heart7\n    },\n    8: {\n        score: 666,\n        img: heart8\n    },\n\n}\n\nfunction getWindowDimensions() {\n    const { innerWidth: width, innerHeight: height } = window;\n    return {\n        width,\n        height\n    };\n}\n\nfunction useWindowDimensions() {\n    const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n    useEffect(() => {\n        function handleResize() {\n            setWindowDimensions(getWindowDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    return windowDimensions;\n}\n\n\nconst Hearts = ({x, y, level}) => {\n    const [littleHearts, setLittleHearts] = useState([]);\n    const [image, setImage] = useState(gameLevels[1].img);\n    const createArray = () => {\n        let rand = Math.floor(Math.random()*5+1);\n        let array = [];\n        for(let i = 0; i < rand; i++) {\n            array.push(\n                {\n                    top: Math.floor(Math.random()*12-12)*10,\n                    left: Math.floor(Math.random()*12-12)*10,\n                }\n            );\n        }\n        return array\n    }\n    useEffect(() => {\n        setImage(gameLevels[level].img)\n        setLittleHearts(createArray());\n\n    }, []);\n    return (\n        <>\n            {littleHearts.map((h) =>  <img\n                           src={image} alt=\"logo\"\n                           className={`littleHearts littleHeartsAnimate`}\n                           style={{top: y+h.top, left: x+h.left}}\n                    />\n            )}\n        </>\n)\n}\n\nfunction App() {\n    const [heartBeat, setHeartBeat] = useState(false);\n    const { height, width } = useWindowDimensions();\n    const [score, setScore] = useState(0);\n    const [level, setLevel] = useState(1);\n    const [littleHearts, setLittleHearts] = useState([]);\n    const [darkMode, setDarkMode] = useState(false);\n    const [songUrl, setSongUrl] = useState(song2);\n    const [win, setWin] = useState(false);\n\n    const [play, { pause }] = useSound(songUrl);\n    \n    const onClickHeart = () => {\n        setHeartBeat(!heartBeat);\n        !heartBeat ? play() : pause();\n    }\n\n    const addHearts = useCallback((e) => {\n        e.preventDefault();\n        if ((e.screenX > (width/2-150) && e.screenX < (width/2+150)) \n        && (e.screenY > (height/2-150) && e.screenY < (height/2+150)) \n        && ((e.screenX < (190) && e.screenY < (70)))) return\n\n        setLittleHearts((prev) => {\n            return [...prev, {\n                x: e.screenX,\n                y: e.screenY,\n\n            }]\n        });\n        setScore((score) => score+1);\n        if(level < 8) {\n            if(score == gameLevels[level+1].score) {\n                setLevel(level+1);\n            }\n        }\n\n    }, [littleHearts])\n\n    return (\n        <div className={darkMode ? \"AppDark\" : \"AppLight\"} onClick={addHearts}>\n            <div className=\"score\" onClick={() => setDarkMode(!darkMode)}>Score: {score}</div>\n            <div className={ heartBeat ? \"heartBlock heartAnimate\" : \"heartBlock\"}\n                 onClick={onClickHeart}\n            >\n                <img src={logo} className=\"heart\" alt=\"logo\" />\n            </div>\n            {littleHearts.map(h => <Hearts x={h.x} y={h.y} level={level}  />)}\n        </div>\n    );\n}\n\n\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}