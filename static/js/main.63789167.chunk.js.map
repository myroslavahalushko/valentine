{"version":3,"sources":["hearts/heart.svg","song.m4a","song2.mp3","hearts/heart1.png","hearts/heart2.png","hearts/heart3.png","hearts/heart4.png","hearts/heart5.png","hearts/heart6.png","hearts/heart7.png","hearts/heart8.png","App.js","reportWebVitals.js","index.js"],"names":["gameLevels","1","score","img","heart1","2","heart2","3","heart3","4","heart4","5","heart5","6","heart6","7","heart7","8","heart8","Hearts","x","y","level","useState","littleHearts","setLittleHearts","image","setImage","useEffect","rand","Math","floor","random","array","i","push","top","left","createArray","map","h","src","alt","className","style","App","heartBeat","setHeartBeat","setScore","setLevel","darkMode","setDarkMode","song2","songUrl","setSongUrl","win","setWin","useSound","play","pause","addHearts","useCallback","e","preventDefault","screenX","screenY","prev","result","prompt","song1","alert","onClick","logo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63789167.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/heart.3a0fdf65.svg\";","export default __webpack_public_path__ + \"static/media/song.b14312b9.m4a\";","export default __webpack_public_path__ + \"static/media/song2.5e3525e9.mp3\";","export default __webpack_public_path__ + \"static/media/heart1.73e3881b.png\";","export default __webpack_public_path__ + \"static/media/heart2.53ab6470.png\";","export default __webpack_public_path__ + \"static/media/heart3.edfd0bd2.png\";","export default __webpack_public_path__ + \"static/media/heart4.58da2c99.png\";","export default __webpack_public_path__ + \"static/media/heart5.25eeda2f.png\";","export default __webpack_public_path__ + \"static/media/heart6.5bf554d6.png\";","export default __webpack_public_path__ + \"static/media/heart7.cbd02a8a.png\";","export default __webpack_public_path__ + \"static/media/heart8.107ca2bd.png\";","import logo from './hearts/heart.svg';\nimport './App.css';\nimport {useState, useEffect, useCallback} from \"react\";\nimport song1 from './song.m4a';\nimport song2 from './song2.mp3';\nimport useSound from 'use-sound';\nimport heart1 from './hearts/heart1.png';\nimport heart2 from './hearts/heart2.png';\nimport heart3 from './hearts/heart3.png';\nimport heart4 from './hearts/heart4.png';\nimport heart5 from './hearts/heart5.png';\nimport heart6 from './hearts/heart6.png';\nimport heart7 from './hearts/heart7.png';\nimport heart8 from './hearts/heart8.png';\n\nlet gameLevels = {\n   1: {\n       score: 0,\n       img: heart1\n   },\n    2: {\n       score: 60,\n        img: heart2\n    },\n    3: {\n        score: 120,\n        img: heart3\n    },\n    4: {\n        score: 228,\n        img: heart4\n    },\n    5: {\n        score: 322,\n        img: heart5\n    },\n    6: {\n        score: 470,\n        img: heart6\n    },\n    7: {\n        score: 520,\n        img: heart7\n    },\n    8: {\n        score: 666,\n        img: heart8\n    },\n\n}\n\nconst Hearts = ({x, y, level}) => {\n    const [littleHearts, setLittleHearts] = useState([]);\n    const [image, setImage] = useState(gameLevels[1].img);\n    const createArray = () => {\n        let rand = Math.floor(Math.random()*3+1);\n        let array = [];\n        for(let i = 0; i < rand; i++) {\n            array.push(\n                {\n                    top: Math.floor(Math.random()*12-12)*10,\n                    left: Math.floor(Math.random()*12-12)*10,\n                }\n            );\n        }\n        return array\n    }\n    useEffect(() => {\n        setImage(gameLevels[level].img)\n        setLittleHearts(createArray());\n\n    }, []);\n    return (\n        <>\n            {littleHearts.map((h) =>  <img\n                           src={image} alt=\"logo\"\n                           className={`littleHearts littleHeartsAnimate`}\n                           style={{top: y+h.top, left: x+h.left}}\n                    />\n            )}\n        </>\n)\n}\n\nfunction App() {\n    const [heartBeat, setHeartBeat] = useState(false);\n    const [score, setScore] = useState(0);\n    const [level, setLevel] = useState(1);\n    const [littleHearts, setLittleHearts] = useState([]);\n    const [darkMode, setDarkMode] = useState(false);\n    const [songUrl, setSongUrl] = useState(song2);\n    const [win, setWin] = useState(false);\n\n    const [play, { pause }] = useSound(songUrl);\n    \n    const onClickHeart = () => {\n        setHeartBeat(!heartBeat);\n        !heartBeat ? play() : pause();\n    }\n\n    const addHearts = useCallback((e) => {\n        e.preventDefault();\n        if (((e.screenX < (190) && e.screenY < (105)))) return\n\n        setLittleHearts((prev) => {\n            return [...prev, {\n                x: e.screenX,\n                y: e.screenY,\n\n            }]\n        });\n        setScore((score) => score+1);\n        if(score < 666) {\n            if(score == gameLevels[level+1].score) {\n                setLevel(level+1);\n            }\n        } else {\n            if(!win) {\n                let result = prompt(\"Ошибка! Успех!\", [\"PS: ***\"]);\n                setWin(true);\n                setLevel(level+1);\n                if(result === \"муп\") {\n                    setHeartBeat(false);\n                    pause();\n                    setSongUrl(song1);\n                } else {\n                    alert(\"Гррр\");\n                }\n            }\n        }\n\n    }, [littleHearts])\n\n    return (\n        <div className={darkMode ? \"AppDark\" : \"AppLight\"} onClick={addHearts}>\n            <div className=\"score\" onClick={() => setDarkMode(!darkMode)}>Score: {score}</div>\n            <div className={ heartBeat ? \"heartBlock heartAnimate\" : \"heartBlock\"}\n                 onClick={onClickHeart}\n            >\n                <img src={logo} className=\"heart\" alt=\"logo\" />\n            </div>\n            {littleHearts.map(h => <Hearts x={h.x} y={h.y} level={level}  />)}\n        </div>\n    );\n}\n\n\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}